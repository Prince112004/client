import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/particlesjs/dist/particles.min.js
var require_particles_min = __commonJS({
  "node_modules/particlesjs/dist/particles.min.js"(exports, module) {
    var Particles = function(e, t) {
      "use strict";
      var n, i = {};
      function o(e2, t2) {
        return e2.x < t2.x ? -1 : e2.x > t2.x ? 1 : e2.y < t2.y ? -1 : e2.y > t2.y ? 1 : 0;
      }
      return (n = /* @__PURE__ */ function() {
        return function() {
          var e2 = this;
          e2.defaults = { responsive: null, selector: null, maxParticles: 100, sizeVariations: 3, showParticles: true, speed: 0.5, color: "#000000", minDistance: 120, connectParticles: false }, e2.element = null, e2.context = null, e2.ratio = null, e2.breakpoints = [], e2.activeBreakpoint = null, e2.breakpointSettings = [], e2.originalSettings = null, e2.storage = [], e2.usingPolyfill = false;
        };
      }()).prototype.init = function(e2) {
        var t2 = this;
        return t2.options = t2._extend(t2.defaults, e2), t2.originalSettings = JSON.parse(JSON.stringify(t2.options)), t2._animate = t2._animate.bind(t2), t2._initializeCanvas(), t2._initializeEvents(), t2._registerBreakpoints(), t2._checkResponsive(), t2._initializeStorage(), t2._animate(), t2;
      }, n.prototype.destroy = function() {
        var t2 = this;
        t2.storage = [], t2.element.remove(), e.removeEventListener("resize", t2.listener, false), e.clearTimeout(t2._animation), cancelAnimationFrame(t2._animation);
      }, n.prototype._initializeCanvas = function() {
        var n2, i2, o2 = this;
        if (!o2.options.selector) return console.warn("particles.js: No selector specified! Check https://github.com/marcbruederlin/particles.js#options"), false;
        o2.element = t.querySelector(o2.options.selector), o2.context = o2.element.getContext("2d"), n2 = e.devicePixelRatio || 1, i2 = o2.context.webkitBackingStorePixelRatio || o2.context.mozBackingStorePixelRatio || o2.context.msBackingStorePixelRatio || o2.context.oBackingStorePixelRatio || o2.context.backingStorePixelRatio || 1, o2.ratio = n2 / i2, o2.element.width = o2.element.offsetParent ? o2.element.offsetParent.clientWidth * o2.ratio : o2.element.clientWidth * o2.ratio, o2.element.offsetParent && "BODY" === o2.element.offsetParent.nodeName ? o2.element.height = e.innerHeight * o2.ratio : o2.element.height = o2.element.offsetParent ? o2.element.offsetParent.clientHeight * o2.ratio : o2.element.clientHeight * o2.ratio, o2.element.style.width = "100%", o2.element.style.height = "100%", o2.context.scale(o2.ratio, o2.ratio);
      }, n.prototype._initializeEvents = function() {
        var t2 = this;
        t2.listener = (function() {
          t2._resize();
        }).bind(this), e.addEventListener("resize", t2.listener, false);
      }, n.prototype._initializeStorage = function() {
        var e2 = this;
        e2.storage = [];
        for (var t2 = e2.options.maxParticles; t2--; ) e2.storage.push(new i(e2.context, e2.options));
      }, n.prototype._registerBreakpoints = function() {
        var e2, t2, n2, i2 = this, o2 = i2.options.responsive || null;
        if ("object" == typeof o2 && null !== o2 && o2.length) {
          for (e2 in o2) if (n2 = i2.breakpoints.length - 1, t2 = o2[e2].breakpoint, o2.hasOwnProperty(e2)) {
            for (; n2 >= 0; ) i2.breakpoints[n2] && i2.breakpoints[n2] === t2 && i2.breakpoints.splice(n2, 1), n2--;
            i2.breakpoints.push(t2), i2.breakpointSettings[t2] = o2[e2].options;
          }
          i2.breakpoints.sort(function(e3, t3) {
            return t3 - e3;
          });
        }
      }, n.prototype._checkResponsive = function() {
        var t2, n2 = this, i2 = false, o2 = e.innerWidth;
        if (n2.options.responsive && n2.options.responsive.length && null !== n2.options.responsive) {
          for (t2 in i2 = null, n2.breakpoints) n2.breakpoints.hasOwnProperty(t2) && o2 <= n2.breakpoints[t2] && (i2 = n2.breakpoints[t2]);
          null !== i2 ? (n2.activeBreakpoint = i2, n2.options = n2._extend(n2.options, n2.breakpointSettings[i2])) : null !== n2.activeBreakpoint && (n2.activeBreakpoint = null, i2 = null, n2.options = n2._extend(n2.options, n2.originalSettings));
        }
      }, n.prototype._refresh = function() {
        this._initializeStorage(), this._draw();
      }, n.prototype._resize = function() {
        var t2 = this;
        t2.element.width = t2.element.offsetParent ? t2.element.offsetParent.clientWidth * t2.ratio : t2.element.clientWidth * t2.ratio, t2.element.offsetParent && "BODY" === t2.element.offsetParent.nodeName ? t2.element.height = e.innerHeight * t2.ratio : t2.element.height = t2.element.offsetParent ? t2.element.offsetParent.clientHeight * t2.ratio : t2.element.clientHeight * t2.ratio, t2.context.scale(t2.ratio, t2.ratio), clearTimeout(t2.windowDelay), t2.windowDelay = e.setTimeout(function() {
          t2._checkResponsive(), t2._refresh();
        }, 50);
      }, n.prototype._animate = function() {
        var t2 = this;
        t2._draw(), t2._animation = e.requestAnimFrame(t2._animate);
      }, n.prototype.resumeAnimation = function() {
        this._animation || this._animate();
      }, n.prototype.pauseAnimation = function() {
        var t2 = this;
        if (t2._animation) {
          if (t2.usingPolyfill) e.clearTimeout(t2._animation);
          else (e.cancelAnimationFrame || e.webkitCancelAnimationFrame || e.mozCancelAnimationFrame)(t2._animation);
          t2._animation = null;
        }
      }, n.prototype._draw = function() {
        var t2 = this, n2 = t2.element, i2 = n2.offsetParent ? n2.offsetParent.clientWidth : n2.clientWidth, r = n2.offsetParent ? n2.offsetParent.clientHeight : n2.clientHeight, a = t2.options.showParticles, s = t2.storage;
        n2.offsetParent && "BODY" === n2.offsetParent.nodeName && (r = e.innerHeight), t2.context.clearRect(0, 0, n2.width, n2.height), t2.context.beginPath();
        for (var l = s.length; l--; ) {
          var c = s[l];
          a && c._draw(), c._updateCoordinates(i2, r);
        }
        t2.options.connectParticles && (s.sort(o), t2._updateEdges());
      }, n.prototype._updateEdges = function() {
        for (var e2 = this, t2 = e2.options.minDistance, n2 = Math.sqrt, i2 = Math.abs, o2 = e2.storage, r = o2.length, a = 0; a < r; a++) for (var s = o2[a], l = a + 1; l < r; l++) {
          var c, f = o2[l], p = s.x - f.x, h = s.y - f.y;
          if (c = n2(p * p + h * h), i2(p) > t2) break;
          c <= t2 && e2._drawEdge(s, f, 1.2 - c / t2);
        }
      }, n.prototype._drawEdge = function(e2, t2, n2) {
        var i2 = this, o2 = i2.context.createLinearGradient(e2.x, e2.y, t2.x, t2.y), r = this._hex2rgb(e2.color), a = this._hex2rgb(t2.color);
        o2.addColorStop(0, "rgba(" + r.r + "," + r.g + "," + r.b + "," + n2 + ")"), o2.addColorStop(1, "rgba(" + a.r + "," + a.g + "," + a.b + "," + n2 + ")"), i2.context.beginPath(), i2.context.strokeStyle = o2, i2.context.moveTo(e2.x, e2.y), i2.context.lineTo(t2.x, t2.y), i2.context.stroke(), i2.context.fill(), i2.context.closePath();
      }, n.prototype._extend = function(e2, t2) {
        return Object.keys(t2).forEach(function(n2) {
          e2[n2] = t2[n2];
        }), e2;
      }, n.prototype._hex2rgb = function(e2) {
        var t2 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e2);
        return t2 ? { r: parseInt(t2[1], 16), g: parseInt(t2[2], 16), b: parseInt(t2[3], 16) } : null;
      }, (i = function(n2, i2) {
        var o2 = this, r = Math.random, a = i2.speed, s = i2.color instanceof Array ? i2.color[Math.floor(Math.random() * i2.color.length)] : i2.color;
        o2.context = n2, o2.options = i2;
        var l = t.querySelector(i2.selector);
        o2.x = l.offsetParent ? r() * l.offsetParent.clientWidth : r() * l.clientWidth, l.offsetParent && "BODY" === l.offsetParent.nodeName ? o2.y = r() * e.innerHeight : o2.y = l.offsetParent ? r() * l.offsetParent.clientHeight : r() * l.clientHeight, o2.vx = r() * a * 2 - a, o2.vy = r() * a * 2 - a, o2.radius = r() * r() * i2.sizeVariations, o2.color = s, o2._draw();
      }).prototype._draw = function() {
        var e2 = this;
        e2.context.save(), e2.context.translate(e2.x, e2.y), e2.context.moveTo(0, 0), e2.context.beginPath(), e2.context.arc(0, 0, e2.radius, 0, 2 * Math.PI, false), e2.context.fillStyle = e2.color, e2.context.fill(), e2.context.restore();
      }, i.prototype._updateCoordinates = function(e2, t2) {
        var n2 = this, i2 = n2.x + this.vx, o2 = n2.y + this.vy, r = n2.radius;
        i2 + r > e2 ? i2 = r : i2 - r < 0 && (i2 = e2 - r), o2 + r > t2 ? o2 = r : o2 - r < 0 && (o2 = t2 - r), n2.x = i2, n2.y = o2;
      }, e.requestAnimFrame = function() {
        var t2 = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame;
        return t2 || (this._usingPolyfill = true, function(t3) {
          return e.setTimeout(t3, 1e3 / 60);
        });
      }(), new n();
    }(window, document);
    !function() {
      "use strict";
      "function" == typeof define && define.amd ? define("Particles", function() {
        return Particles;
      }) : "undefined" != typeof module && module.exports ? module.exports = Particles : window.Particles = Particles;
    }();
  }
});
export default require_particles_min();
/*! Bundled license information:

particlesjs/dist/particles.min.js:
  (*!
   * A lightweight, dependency-free and responsive javascript plugin for particle backgrounds.
   *
   * @author Marc Bruederlin <hello@marcbruederlin.com>
   * @version 2.2.3
   * @license MIT
   * @see https://github.com/marcbruederlin/particles.js
   *)
*/
//# sourceMappingURL=particlesjs.js.map
